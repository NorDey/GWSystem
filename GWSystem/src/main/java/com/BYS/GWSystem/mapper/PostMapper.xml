<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.BYS.GWSystem.mapper.PostMapper">

	<!-- 通用查询映射结果 -->
	<resultMap id="PostResult" type="com.BYS.GWSystem.model.Post">
		<id column="post_id" property="postId" />
		<result column="registration_id" property="registrationId" />
		<result column="responsible" property="responsible" />
		<result column="type_id" property="typeId" />
		<result column="postName" property="postName" />
		<result column="number" property="number" />
		<result column="salary" property="salary" />
		<result column="demand" property="demand" />
		<result column="creationTime" property="creationTime" />
		<result column="popular" property="popular" />
	</resultMap>

	<!-- 通用查询结果列 -->
	<sql id="selectPostVo">
		select p.post_id, p.registration_id, p.responsible,
		p.type_id, p.postName,
		p.number, p.salary, p.demand, p.creationTime,
		p.popular
		from post p
	</sql>

	<select id="selectPostList"
		parameterType="com.BYS.GWSystem.model.Post" resultMap="PostResult">
		<include refid="selectPostVo" />
		where
		<if test="postId != null and postId != ''">
			p.post_id = #{postId}
		</if>
		<if test="registrationId != null and registrationId != 0">
			AND p.registration_id = #{registrationId}
		</if>
		<if test="typeId != null and typeId != 0">
			AND p.type_id = #{typeId}
		</if>
		<if test="demand != null and demand != ''">
			AND p.demand like concat('%', #{demand}, '%')
		</if>
		<if test="popular != null and popular != ''">
			AND p.popular = #{popular}
		</if>
	</select>


	<select id="selectPostListByMore"
		parameterType="com.BYS.GWSystem.dto.PostDto"
		resultType="com.BYS.GWSystem.dto.PostDto">
		SELECT
		e.registration_id,e.enterpriseName,p.post_id,e.address,p.postName,t.profession,t.major,t.major,p.responsible,p.type_id,p.number,p.salary,p.demand,p.creationTime,p.popular
		from enterprise e LEFT JOIN post p on
		e.registration_id=p.registration_id LEFT JOIN type_work t on
		t.post_id=p.post_id
		where p.number>0
		<if test="registrationId != null and registrationId != ''">
			and e.registration_id = #{registrationId}
		</if>
		<if test="postName != null and postName != ''">
			and (t.postName like concat('%', #{postName}, '%') or
			t.major like
			concat('%', #{postName}, '%'))
		</if>
		<if test="enterpriseName != null and enterpriseName != ''">
			and e.enterpriseName like concat('%', #{enterpriseName},
			'%')
		</if>
		<if test="popular != null and popular != ''">
			and p.popular in (2,3)
		</if>
	</select>
	<select id="selectPostListByStudentId" parameterType="String"
		resultType="com.BYS.GWSystem.dto.PostDto">
		SELECT
		e.registration_id,e.enterpriseName,p.post_id,e.address,t.postName,t.profession,t.major,t.major,p.responsible,p.type_id,p.number,p.salary,p.demand,p.creationTime,p.popular,s.collection
		FROM enterprise e LEFT JOIN post p ON
		e.registration_id=p.registration_id
		LEFT JOIN type_work t ON
		t.post_id=p.post_id LEFT JOIN student_history s
		ON s.post_id=p.post_id
		WHERE s.student_id=#{studentId}

	</select>

	<select id="doNewPostList"
		resultType="com.BYS.GWSystem.dto.PostDto">
		SELECT
		e.registration_id,e.enterpriseName,p.post_id,e.address,t.postName,t.profession,t.major,t.major,p.responsible,p.type_id,p.number,p.salary,p.demand,p.creationTime,p.popular
		from enterprise e LEFT JOIN post p on
		e.registration_id=p.registration_id LEFT JOIN type_work t on
		t.post_id=p.post_id
		where p.number > 0 and date_sub(CURDATE(), interval
		7 day) &lt;= date(p.creationTime)
	</select>



	<select id="selectRecruitmentCompaniesNumber" resultType="int">
		SELECT
		COUNT(distinct registration_id) FROM post p WHERE p.registration_id in
		(SELECT distinct registration_id from enterprise e WHERE
		e.examination=2)
	</select>


	<select id="selectPostNumber" resultType="int">
		SELECT COUNT(*) FROM
		post
	</select>

	<select id="selectFollowNumber" resultType="int">
		SELECT COUNT(distinct
		post_id) FROM student_history where collection=1
	</select>

	<select id="selectJobSimpleList" parameterType="String"
		resultMap="PostResult">
		<include refid="selectPostVo" />
		<if test="registrationId != null and registrationId != '' ">
			where p.registration_id = #{registrationId}
		</if>
	</select>

	<select id="selectOneHiredMsg" parameterType="String"
		resultType="com.BYS.GWSystem.model.Post">
		<include refid="selectPostVo" />
		where
		p.post_id = #{postId}
	</select>
	<!-- father id 这里写完才发现写错了mapper算了...反正一样用兄弟取个type_Work的max值 -->
	<select id="maxFid" resultType="int">
		SELECT max(fatherTypeId) from
		type_work
	</select>

	<!-- type id -->
	<select id="maxTid" resultType="int">
		SELECT max(type_id) from post
	</select>

	<!-- 按照工种查询父类ID 这里写完才发现写错了mapper算了...反正一样用兄弟 -->
	<select id="seletExeists" parameterType="String"
		resultType="int">
		SELECT fatherTypeId from type_work where profession =
		#{pro}
	</select>

	<!-- 按照岗位名称查询type_ID -->
	<select id="seletTExeists" parameterType="String"
		resultType="int">
		SELECT type_id from post where postName = #{postNmae}
	</select>
	<!-- 查询工作岗位简要信息(全查) -->
	<select id="jobListAll" resultMap="PostResult">
		select * from post ORDER BY creationTime DESC
	</select>
	<!-- //条件查询岗位简要信息 -->
	<select id="jobListArrage" parameterType="String"
		resultMap="PostResult">
		select * from post where postName = #{postNmae} ORDER BY creationTime DESC
	</select>
	<!-- 根据postName模糊查询 -->
	<select id="jobListLike" parameterType="String"
		resultMap="PostResult">
		select * from post where postName like concat('%',
		#{postNamesL}, '%') ORDER BY creationTime DESC
	</select>

	<insert id="insertPost"
		parameterType="com.BYS.GWSystem.model.Post">
		insert into Post(
		<if test="postId != null and postId != ''">post_id,</if>
		<if test="registrationId != null and registrationId != 0">registration_id,</if>
		<if test="responsible != null and responsible != ''">responsible,</if>
		<if test="typeId != null and typeId != 0">type_id,</if>
		<if test="postName != null and postName != ''">postName,</if>
		<if test="number != null and number != 0">number,</if>
		<if test="salary != null and salary != ''">salary,</if>
		<if test="demand != null and demand != ''">demand,</if>
		creationTime,
		<if test="popular != null and popular != ''">popular</if>
		)values(
		<if test="postId != null and postId != ''">#{postId},</if>
		<if test="registrationId != null and registrationId != 0">#{registrationId},</if>
		<if test="responsible != null and responsible != ''">#{responsible},</if>
		<if test="typeId != null and typeId != 0">#{typeId},</if>
		<if test="postName != null and postName != ''">#{postName},</if>
		<if test="number != null and number != 0">#{number},</if>
		<if test="salary != null and salary != ''">#{salary},</if>
		<if test="demand != null and demand != ''">#{demand},</if>
		sysdate(),
		<if test="popular != null and popular != ''">#{popular}</if>
		)
	</insert>

	<update id="updatePost"
		parameterType="com.BYS.GWSystem.model.Post">
		update Post
		<set>
			<if test="registrationId != null and registrationId != 0">registration_id=#{registrationId},</if>
			<if test="responsible != null and responsible != ''">responsible=#{responsible},</if>
			<if test="typeId != null and typeId != 0">type_id=#{typeId},</if>
			<if test="postName != null and postName != ''">postName=#{postName},</if>
			<if test="number != null and number != 0">number=#{number},</if>
			<if test="salary != null and salary != ''">salary=#{salary},</if>
			<if test="demand != null and demand != ''">demand=#{demand},</if>
			<if test="popular != null and popular != ''">popular=#{popular}</if>
		</set>
		where post_id = #{postId}
	</update>



	<update id="setUpPopularPositions">
		update Post SET popular=2
		where post_id in (SELECT *
		from (SELECT s.post_id from student_history s GROUP BY s.post_id ORDER
		BY COUNT(*) DESC LIMIT 5) as t)
	</update>
	<update id="deletePopularPost">
		update Post SET popular=1
		where popular=2
	</update>



	<delete id="deletePost"
		parameterType="com.BYS.GWSystem.model.Post">
		delete from Post where post_id = #{postId}
	</delete>

</mapper>
